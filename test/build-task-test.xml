<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="CalabashTask-test" basedir="." default="test">

  <dirname property="test.basedir" file="${ant.file.CalabashTask-test}"/>
  <property name="src.dir"     value="src"/>
  <property name="classes.dir" value="classes"/>

  <property name="ant.test.lib" value="ant-testutil.jar"/>
  <property name="report.dir"   value="report"/>
  <property name="junit.out.dir.xml"  value="${report.dir}/junit/xml"/>
  <property name="junit.out.dir.html" value="${report.dir}/junit/html"/>

  <path id="classpath.run">
    <path path="${java.class.path}"/>
    <path location="${test.basedir}/../calabash.jar"/>
  </path>

  <path id="classpath.test">
    <path refid="classpath.run"/>
    <path location="${ant.test.lib}"/>
  </path>

  <target name="clean" description="Delete all generated files">
    <delete failonerror="false" includeEmptyDirs="true">
      <fileset dir="." includes="${ant.project.name}.jar"/>
      <fileset dir="${classes.dir}"/>
      <fileset dir="${report.dir}"/>
    </delete>
  </target>

  <target name="use.init" description="Taskdef´ the Calabash-Task">
    <taskdef name="calabash" classname="com.xmlcalabash.drivers.CalabashTask" classpath="${test.basedir}/../calabash.jar"/>
  </target>


  <target name="use.basic" description="Use without 'in', 'out', and 'pipeline'." depends="use.init">
    <calabash in="in.xml" out="out1.xml" pipeline="pipeline.xpl">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
    </calabash>
  </target>

  <target name="use.in2" description="Use with different input." depends="use.init">
    <calabash in="in2.xml" out="out2.xml" pipeline="pipeline.xpl">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
    </calabash>
  </target>

  <target name="use.inport" description="Use with bogus 'inport'." depends="use.init">
    <calabash in="in.xml" out="out3.xml" inport="bogus" pipeline="pipeline.xpl">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
    </calabash>
  </target>

  <target name="use.inport2" description="Use with real 'inport' value." depends="use.init">
    <calabash in="in.xml" inport="source" out="out4.xml" pipeline="pipeline.xpl">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
    </calabash>
  </target>

  <target name="use.outport" description="Use with bogus 'outport'." depends="use.init">
    <calabash in="in.xml" out="out5.xml" outport="bogus" pipeline="pipeline.xpl">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
    </calabash>
  </target>

  <target name="use.outport2" description="Use with real 'outport' value." depends="use.init">
    <calabash in="in.xml" out="out6.xml" outport="result" pipeline="pipeline.xpl">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
    </calabash>
  </target>

  <target name="use.nestedPipeline" description="Use with nested 'pipeline'" depends="use.init">
    <calabash in="in.xml" out="out7.xml">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
      <pipeline>
	<file file="pipeline.xpl" />
      </pipeline>
    </calabash>
  </target>

  <target name="use.multiport1" description="Use with multiple input ports." depends="use.init">
    <calabash in="doc.xml" out="out8.xml" pipeline="compare-001.xpl">
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
      <input port="alternate">
	<file file="doc.xml" />
      </input>
    </calabash>
  </target>


  <target name="use"
	  description="Try all"
	  depends="use.basic,use.in2,use.inport2,use.inport2,use.outport,use.outport2,use.nestedPipeline,use.multiport1"
	  />


  <target name="junit" description="Runs the unit tests">
    <delete dir="${junit.out.dir.xml}" />
    <mkdir  dir="${junit.out.dir.xml}" />
    <junit printsummary="yes" haltonfailure="no">
      <classpath refid="classpath.test"/>
      <formatter type="xml"/>
      <batchtest fork="yes" todir="${junit.out.dir.xml}">
	<fileset dir="${src.dir}" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>

  <target name="junitreport" description="Create a report for the rest result">
    <mkdir dir="${junit.out.dir.html}" />
    <junitreport todir="${junit.out.dir.html}">
      <fileset dir="${junit.out.dir.xml}">
	<include name="*.xml"/>
      </fileset>
      <report format="frames" todir="${junit.out.dir.html}"/>
    </junitreport>
  </target>

  <target name="test"
	  depends="junit,junitreport"
	  description="Runs unit tests and creates a report"
	  />


</project>
