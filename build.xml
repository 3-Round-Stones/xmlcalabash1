<?xml version="1.0" encoding="UTF-8"?>
<project name="calabash" default="default" basedir=".">
  <description>Builds the distribution jar because IntelliJ sucks at it</description>

  <property file="resources/etc/vendor.properties"/>
  <property file="resources/etc/version.properties"/>

  <property name="version" value="${version.major}.${version.minor}.${version.release}"/>
  <property name="dist.dir" value="dist"/>
  <property name="install.dir" value="${dist.dir}/calabash-${version}"/>
  <property name="build.dir" value="out/production/Calabash"/>

  <property name="izpack.dir" value="/Applications/IzPack"/>
  <taskdef name="izpack"
           classpath="${izpack.dir}/lib/compiler.jar"
           classname="com.izforge.izpack.ant.IzPackTask"/>

  <path id="build.classpath">
    <fileset dir="lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <pathconvert property="run.classpath" refid="build.classpath" pathsep=" ">
    <map from="${basedir}/" to=""/>
  </pathconvert>

  <target name="default" depends="jar"/>

  <target name="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <target name="update-output">
    <copy todir="${build.dir}/etc">
      <fileset dir="resources/etc">
        <exclude name="install-proto.xsl"/>
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="compile">
    <jar destfile="calabash.jar">
      <manifest>
	<attribute name="Built-By" value="${built.by}"/>
	<attribute name="Implementation-Vendor" value="${implementation.vendor}"/>
	<attribute name="Implementation-Title" value="${implementation.title}"/>
	<attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Main-Class" value="com.xmlcalabash.drivers.Main"/>
        <attribute name="Class-Path" value="${run.classpath}"/>
      </manifest>

      <fileset dir="${build.dir}"/>
    </jar>
  </target>

  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="distclean" depends="init">
    <delete dir="${dist.dir}"/>
  </target>

  <target name="compile" depends="init,optional-features,update-output">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <!-- Optional features -->
      <exclude name="com/xmlcalabash/extensions/MetadataExtractor.java"/>
      <exclude name="com/xmlcalabash/library/XSLFormatter.java"/>
      <exclude name="com/xmlcalabash/extensions/DeltaXML.java"/>
      <exclude name="com/xmlcalabash/extensions/xmlunit/Compare.java"/>
      <exclude name="com/xmlcalabash/extensions/marklogic/XCCAdhocQuery.java"/>
      <exclude name="com/xmlcalabash/extensions/marklogic/XCCInsertDocument.java"/>
      <exclude name="com/xmlcalabash/extensions/marklogic/XCCInvokeModule.java"/>

      <!-- Only for debugging -->
      <exclude name="com/xmlcalabash/drivers/SaxonProblem.java"/>
    </javac>
  </target>

  <target name="optional-features" depends="compile-MetadataException,compile-XEP,compile-DeltaXML,
                                            compile-XMLUnit,compile-XCC"/>

  <condition property="XMLUnit.present">
    <and>
      <available classname="org.custommonkey.xmlunit.XMLAssert"/>
      <available classname="junit.framework.AssertionFailedError"/>
    </and>
  </condition>

  <target name="compile-XMLUnit" depends="init" if="XMLUnit.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/xmlunit/Compare.java"/>
    </javac>
  </target>

  <available classname="com.marklogic.xcc.ContentSource" property="MarkLogicXCC.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-XCC" depends="init" if="MarkLogicXCC.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/marklogic/XCCAdhocQuery.java"/>
      <include name="com/xmlcalabash/extensions/marklogic/XCCInsertDocument.java"/>
      <include name="com/xmlcalabash/extensions/marklogic/XCCInvokeModule.java"/>
    </javac>
  </target>

  <available classname="com.drew.metadata.MetadataException" property="MetadataException.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-MetadataException" depends="init" if="MetadataException.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/MetadataExtractor.java"/>
    </javac>
  </target>

  <available classname="com.deltaxml.core.DXPConfiguration" property="DeltaXML.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-DeltaXML" depends="init" if="DeltaXML.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/extensions/DeltaXML.java"/>
    </javac>
  </target>

  <available classname="com.renderx.xep.FormatterImpl" property="XEP.present">
    <classpath refid="build.classpath"/>
  </available>

  <target name="compile-XEP" depends="init" if="XEP.present">
    <javac destdir="${build.dir}"
	   classpathref="build.classpath"
           includeantruntime="false">
      <src path="src"/>
      <include name="com/xmlcalabash/library/XSLFormatter.java"/>
    </javac>
  </target>

  <target name="dist" depends="init,distrib">
    <delete file="${dist.dir}/install.xml"/>

    <xslt in="resources/etc/install-proto.xsl" style="resources/etc/install-proto.xsl"
          out="${dist.dir}/install.xml">
      <param name="version.label" expression="${version}"/>
    </xslt>

    <echo file="${install.dir}/calabash">#!/bin/sh
java -Xmx1024m -jar %INSTALL_PATH/calabash.jar "$@"
    </echo>

    <echo file="${install.dir}/calabash.bat">
@java -Xmx1024m -jar "%INSTALL_PATH\calabash.jar" %*
    </echo>

    <izpack input="${dist.dir}/install.xml"
            output="${dist.dir}/calabash-${version}.jar"
            installerType="standard"
            basedir="${dist.dir}"
            izPackDir="${izpack.dir}"/>
  </target>

  <target name="distrib" depends="jar">
    <mkdir dir="${install.dir}"/>
    <mkdir dir="${install.dir}/lib"/>
    <mkdir dir="${install.dir}/docs"/>
    <mkdir dir="${install.dir}/schemas"/>
    <mkdir dir="${install.dir}/xpl"/>
    <copy todir="${install.dir}/docs">
      <fileset file="docs/NOTICES"/>
      <fileset file="docs/ChangeLog"/>
      <fileset file="docs/BUGS"/>
      <fileset file="docs/**txt"/>
    </copy>
    <copy todir="${install.dir}">
      <fileset file="docs/README"/>
    </copy>
    <jar destfile="${install.dir}/calabash.jar">
      <manifest>
        <attribute name="Built-By" value="${built.by}"/>
        <attribute name="Implementation-Vendor" value="${implementation.vendor}"/>
        <attribute name="Implementation-Title" value="${implementation.title}"/>
        <attribute name="Implementation-Version" value="${version}"/>
        <attribute name="Main-Class" value="com.xmlcalabash.drivers.Main"/>
        <attribute name="Class-Path" value="${run.classpath}"/>
      </manifest>

      <fileset dir="${build.dir}"/>
    </jar>

    <copy todir="${install.dir}/lib">
      <fileset file="lib/commons*.jar"/>
      <fileset file="lib/saxon9he.jar"/>
    </copy>

    <copy todir="${install.dir}/xpl">
      <fileset file="xpl/**xpl">
        <exclude name="submit-test-report.xpl"/>
      </fileset>
    </copy>

    <copy todir="${install.dir}/schemas">
      <fileset file="schemas/**"/>
    </copy>

    <echo file="${install.dir}/VERSION">${version}</echo>

    <zip destfile="${dist.dir}/calabash-${version}.zip"
         basedir="${dist.dir}"
         includes="calabash-${version}/**"/>
  </target>

  <target name="test-report" depends="jar">
    <echo>Generating test report...this may take a few minutes...</echo>
    <java fork="true" classname="com.xmlcalabash.drivers.RunTestReport"
          output="test/report.xml" error="test/errors.txt">
      <classpath>
        <pathelement location="calabash.jar"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
      <jvmarg value="-Xmx1024m"/>
      <sysproperty key="com.xmlcalabash.phonehome" value="false"/>
      <arg value="-D"/>
      <arg value="-a"/>
      <arg value="http://tests.xproc.org/tests/required/test-suite.xml"/>
      <arg value="http://tests.xproc.org/tests/serialization/test-suite.xml"/>
      <arg value="http://tests.xproc.org/tests/optional/test-suite.xml"/>
      <arg value="http://tests.xproc.org/tests/extension/test-suite.xml"/>
    </java>
  </target>

  <target name="test-suite" depends="test-report">
    <echo>Formatting test-suite report...</echo>
    <java fork="true" classname="net.sf.saxon.Transform">
      <classpath refid="build.classpath"/>
      <arg value="-o:test/report.html"/>
      <arg value="-s:test/report.xml"/>
      <arg value="-xsl:resources/format-report.xsl"/>
    </java>
    <echo>Test suite-suite report is in test/report.html</echo>
  </target>

</project>
